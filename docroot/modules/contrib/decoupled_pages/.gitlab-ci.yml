################
# Includes
#
# Additional configuration can be provided through includes.
# One advantage of include files is that if they are updated upstream, the changes affect all pipelines using that include.
#
# Includes can be overridden by re-declaring anything provided in an include, here in gitlab-ci.yml
# https://docs.gitlab.com/ee/ci/yaml/includes.html#override-included-configuration-values
################

include:
  ################
  # DrupalCI includes:
  # As long as you include this, any future includes added by the Drupal Association will be accessible to your pipelines automatically.
  # View these include files at https://git.drupalcode.org/project/gitlab_templates/
  ################
  - project: $_GITLAB_TEMPLATES_REPO
    ref: $_GITLAB_TEMPLATES_REF
    file:
      - '/includes/include.drupalci.main.yml'
      - '/includes/include.drupalci.variables.yml'
      - '/includes/include.drupalci.workflows.yml'

################
# Pipeline configuration variables
#
# These are the variables provided to the Run Pipeline form that a user may want to override.
#
# Docs at https://git.drupalcode.org/project/gitlab_templates/-/blob/1.0.x/includes/include.drupalci.variables.yml
################
variables:
  SKIP_ESLINT: '1'
  # This module only has Nightwatch tests.
  SKIP_PHPUNIT: '1'
  # Opt in to testing previous & next minor (Drupal 10.0.x and 10.2.x).
  OPT_IN_TEST_PREVIOUS_MINOR: '1'
  OPT_IN_TEST_NEXT_MINOR: '1'
  # Opt in to testing $CORE_PREVIOUS_MAJOR (currently Drupal 9.5).
  OPT_IN_TEST_PREVIOUS_MAJOR: '1'
  # Opt in to testing $CORE_MAJOR_DEVELOPMENT (currently Drupal 11).
  OPT_IN_TEST_NEXT_MAJOR: '1'

# Override the rules from the template: it should also run when PHPUnit is skipped but Nightwatch is not.
# @todo Remove this after https://www.drupal.org/project/gitlab_templates/issues/3397270 lands.
composer (previous major):
  rules:
    - if: '$SKIP_PHPUNIT == "1" && $SKIP_NIGHTWATCH == "1"'
      when: never
    - if: '$OPT_IN_TEST_PREVIOUS_MAJOR == "1"'
composer (previous minor):
  rules:
    - if: '$SKIP_PHPUNIT == "1" && $SKIP_NIGHTWATCH == "1"'
      when: never
    - if: '$OPT_IN_TEST_PREVIOUS_MINOR == "1"'
composer (next minor):
  rules:
    - if: '$SKIP_PHPUNIT == "1" && $SKIP_NIGHTWATCH == "1"'
      when: never
    - if: '$OPT_IN_TEST_NEXT_MINOR == "1"'
composer (next major):
  rules:
    - if: '$SKIP_PHPUNIT == "1" && $SKIP_NIGHTWATCH == "1"'
      when: never
    - if: '$OPT_IN_TEST_NEXT_MAJOR == "1"'

nightwatch (previous minor):
  extends: nightwatch
  needs:
    - "composer (previous minor)"
  variables:
    _TARGET_PHP: $CORE_PHP_MIN
    _TARGET_CORE: $CORE_SECURITY_PREVIOUS_MINOR

nightwatch (previous major):
  extends: nightwatch
  needs:
    - "composer (previous major)"
  variables:
    _TARGET_PHP: $CORE_PREVIOUS_PHP_MIN
    _TARGET_CORE: $CORE_PREVIOUS_STABLE

# Future versions, hence breaks may arrive at any time: failure is allowed.
nightwatch (next minor):
  allow_failure: true
  extends: nightwatch
  needs:
    - "composer (next minor)"
  variables:
    _TARGET_PHP: $CORE_PHP_MIN
    _TARGET_CORE: $CORE_NEXT_MINOR
nightwatch (next major):
  allow_failure: true
  extends: nightwatch
  rules:
    - if: '$SKIP_NIGHTWATCH == "1"'
      when: never
    - if: '$OPT_IN_TEST_NEXT_MAJOR == "1"'
  needs:
    - "composer (next major)"
  before_script:
    # If the module already supports Drupal 11, do nothing, otherwise, claim Drupal 11 support for testing purposes.
    - grep -q "\^11" *.info.yml || (grep -q "\^10" *.info.yml && sed -i "s/\^10/\^10 \|\| ^11/" *.info.yml)
  variables:
    _TARGET_PHP: $CORE_PHP_MAX
