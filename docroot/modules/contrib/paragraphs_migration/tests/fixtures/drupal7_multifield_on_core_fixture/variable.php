<?php
// @codingStandardsIgnoreFile
/**
 * @file
 * A database agnostic dump for testing purposes.
 *
 * This file was generated by the Drupal 9.1.9 db-tools.php script.
 */

use Drupal\Core\Database\Database;

$connection = Database::getConnection();

// "entityreference:base-tables" should be updated with "multifield".
$value_serialized = $connection->select('variable', 'v')
  ->fields('v', ['value'])
  ->condition('v.name', 'entityreference:base-tables')
  ->execute()
  ->fetchCol()[0];
$value = unserialize($value_serialized);
assert(is_array($value));
$value['multifield'] = [
  'multifield',
  'id',
];
$connection->update('variable')
  ->condition('name', 'entityreference:base-tables')
  ->fields(['value' => serialize($value)])
  ->execute();

$connection->insert('variable')
->fields(array(
  'name',
  'value',
))
->values(array(
  'name' => 'additional_settings__active_tab_type_with_multifields',
  'value' => 's:13:"edit-workflow";',
))
->values(array(
  'name' => 'comment_anonymous_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'comment_default_mode_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'comment_default_per_page_type_with_multifields',
  'value' => 's:2:"50";',
))
->values(array(
  'name' => 'comment_form_location_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'comment_preview_type_with_multifields',
  'value' => 's:1:"0";',
))
->values(array(
  'name' => 'comment_subject_field_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'comment_type_with_multifields',
  'value' => 's:1:"0";',
))
->values(array(
  'name' => 'entity_translation_comment_filter_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'entity_translation_hide_translation_links_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'entity_translation_node_metadata_type_with_multifields',
  'value' => 's:1:"0";',
))
->values(array(
  'name' => 'entity_translation_settings_taxonomy_term__vocabulary_with_multifields',
  'value' => 'a:5:{s:16:"default_language";s:13:"xx-et-default";s:22:"hide_language_selector";i:0;s:21:"exclude_language_none";i:0;s:13:"lock_language";i:1;s:27:"shared_fields_original_only";i:1;}',
))
->values(array(
  'name' => 'field_bundle_settings_multifield__field_multifield_complex_fields',
  'value' => 'a:2:{s:10:"view_modes";a:0:{}s:12:"extra_fields";a:2:{s:4:"form";a:0:{}s:7:"display";a:0:{}}}',
))
->values(array(
  'name' => 'field_bundle_settings_multifield__field_multifield_w_text_fields',
  'value' => 'a:2:{s:10:"view_modes";a:0:{}s:12:"extra_fields";a:2:{s:4:"form";a:0:{}s:7:"display";a:0:{}}}',
))
->values(array(
  'name' => 'field_bundle_settings_node__type_with_multifields',
  'value' => 'a:2:{s:10:"view_modes";a:0:{}s:12:"extra_fields";a:2:{s:4:"form";a:1:{s:5:"title";a:1:{s:6:"weight";s:2:"-5";}}s:7:"display";a:0:{}}}',
))
->values(array(
  'name' => 'field_bundle_settings_taxonomy_term__vocabulary_with_multifields',
  'value' => 'a:2:{s:10:"view_modes";a:0:{}s:12:"extra_fields";a:2:{s:4:"form";a:1:{s:8:"language";a:1:{s:6:"weight";s:1:"5";}}s:7:"display";a:0:{}}}',
))
->values(array(
  'name' => 'i18n_sync_node_type_type_with_multifields',
  'value' => 'a:0:{}',
))
->values(array(
  'name' => 'language_content_type_type_with_multifields',
  'value' => 's:1:"0";',
))
->values(array(
  'name' => 'menu_options_type_with_multifields',
  'value' => 'a:0:{}',
))
->values(array(
  'name' => 'menu_parent_type_with_multifields',
  'value' => 's:11:"main-menu:0";',
))
->values(array(
  'name' => 'multifield_max_id',
  'value' => 's:1:"4";',
))
->values(array(
  'name' => 'node_options_type_with_multifields',
  'value' => 'a:3:{i:0;s:6:"status";i:1;s:7:"promote";i:2;s:8:"revision";}',
))
->values(array(
  'name' => 'node_preview_type_with_multifields',
  'value' => 's:1:"0";',
))
->values(array(
  'name' => 'node_submitted_type_with_multifields',
  'value' => 'i:0;',
))
->values(array(
  'name' => 'save_continue_type_with_multifields',
  'value' => 's:19:"Save and add fields";',
))
->execute();
